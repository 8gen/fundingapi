swagger: '2.0'

info:
  title: Funding API
  version: "0.2.0"
  description: |
    # The data serialization:
    For JSON:
      - Content-Type: application/json
      - Accept: application/json


host: fundingapi.dev.8gen.team
schemes:
  - http
basePath: /api/


securityDefinitions:
  api_key:
    type: apiKey
    name: X-API-KEY
    in: header
    description: |
      For any secured endpoints conforming clients SHOULD use a HTTP header `X-API-KEY`.
      Client SHOULD keep `X-API-KEY` in local data storage.
      Example header: `X-API-KEY: WU1tQSo/R3RhLndgSHMvLiNONX55MWZAOW8hLUc+cUM=`.

  session_token:
    type: apiKey
    in: header
    name: Authorization
    description: |
      Example header: `Authorization: Bearer WU1tQSo/R3RhLndgSHMvLiNONX55MWZAOW8hLUc+cUM=`.

produces:
  - application/json
consumes:
  - application/json
  - multipart/form-data

parameters:
  userAgent:
    name: User-Agent
    default: 'dApp/0.0.1'
    description: |
      Example: `User-Agent: Yandex.Browser/0.0.1`,
      where is:
      - `dApp` — type platform
      - `0.0.1` — application version
    type: string
    in: header
    required: true

  address:
    name: address
    type: string
    pattern: ^0x[0-9abcdefABCDEF]{40}$
    in: path
    required: true

paths:
  /create_pair:
    parameters:
      - $ref: '#/parameters/userAgent'
    post:
      tags:
        - Generate
      security:
        - api_key: []
        - session_token: []
      summary: get temporary ethereum address
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/createPairRequest'
      responses:
        200:
          description: 'Return status'
          schema:
            $ref: '#/definitions/createPairResponse'
        400:
          description: 'Bad format'
        401:
          description: 'Unauthorized, wrong X-API-KEY'
        500:
          description: 'Internal server error'

  /account/register:
    parameters:
      - $ref: '#/parameters/userAgent'
    post:
      tags:
        - Generate
      security:
        - api_key: []
      summary: register account
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/registerRequest'
      responses:
        200:
          description: 'Return status'
          schema:
            $ref: '#/definitions/authResponse'
        400:
          description: 'Bad format'
        401:
          description: 'Unauthorized, wrong X-API-KEY'
        500:
          description: 'Internal server error'

  /account/oauth2:
    parameters:
      - $ref: '#/parameters/userAgent'
    post:
      tags:
        - Generate
      security:
        - api_key: []
      summary: sign in or sign up using oauth2 provider
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/oauth2Request'
      responses:
        200:
          description: 'Return status'
          schema:
            $ref: '#/definitions/authResponse'
        400:
          description: 'Bad format'
        401:
          description: 'Unauthorized, wrong X-API-KEY'
        500:
          description: 'Internal server error'

  /account/session:
    parameters:
      - $ref: '#/parameters/userAgent'
    get:
      tags:
        - Generate
      security:
        - api_key: []
        - session_token: []
      summary: check session
      responses:
        200:
          description: 'Return status'
          schema:
            $ref: '#/definitions/authResponse'
        400:
          description: 'Bad format'
        401:
          description: 'Unauthorized, wrong X-API-KEY'
        500:
          description: 'Internal server error'
    post:
      tags:
        - Generate
      security:
        - api_key: []
      summary: perform authorization account
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/authRequest'
      responses:
        200:
          description: 'Return status'
          schema:
            $ref: '#/definitions/authResponse'
        400:
          description: 'Bad format'
        401:
          description: 'Unauthorized, wrong X-API-KEY'
        500:
          description: 'Internal server error'

  /account/profile:
    parameters:
      - $ref: '#/parameters/userAgent'
    get:
      tags:
        - Generate
      security:
        - api_key: []
        - session_token: []
      summary: fetch profile
      responses:
        200:
          description: 'Return status'
          schema:
            $ref: '#/definitions/responseProfile'
        400:
          description: 'Bad format'
        401:
          description: 'Unauthorized, wrong X-API-KEY'
        500:
          description: 'Internal server error'
    put:
      tags:
        - Generate
      security:
        - api_key: []
        - session_token: []
      summary: update profile
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/updateProfile'
      responses:
        200:
          description: 'Return status'
          schema:
            $ref: '#/definitions/responseProfile'
        400:
          description: 'Bad format'
        401:
          description: 'Unauthorized, wrong X-API-KEY'
        500:
          description: 'Internal server error'



definitions:
  createPairResponse:
    type: object
    required: ['address', 'id']
    properties:
      address:
        type: string
        pattern: ^0x[0-9abcdefABCDEF]{40}$
        description: 'Ethereum address'
        example: '0xe20df59ecc01ee28e3e794d64f37c6961bae495c'
      id:
        type: string
        format: uuid
        description: 'Pair ID'
        example: d4171a66-af9f-493b-a4d7-dec0fc0c9e85

  createPairRequest:
    type: object
    required: ['address']
    properties:
      address:
        type: string
        pattern: ^0x[0-9abcdefABCDEF]{40}$
        description: 'Ethereum address'
        example: '0xe20df59ecc01ee28e3e794d64f37c6961bae495c'

  registerRequest:
    type: object
    required: ['email', 'recaptcha_token']
    properties:
      email:
        type: string
        format: email
        description: 'User mail'
        example: 'me@daedalus.ru'
      recaptcha_token:
        type: string
        description: 'reCAPTCHA v2 Token'
        example: '…'

  authRequest:
    type: object
    required: ['email', 'recaptcha_toke', 'password']
    properties:
      email:
        type: string
        format: email
        description: 'User mail'
        example: 'me@daedalus.ru'
      password:
        type: string
        description: 'User password'
        example: '…'
      recaptcha_token:
        type: string
        description: 'reCAPTCHA v2 Token'
        example: '…'

  authResponse:
    type: object
    required: ['id']
    properties:
      id:
        type: string
        format: uuid
        description: 'User ID'
        example: d4171a66-af9f-493b-a4d7-dec0fc0c9e85
      session_token:
        type: string
        description: 'Session token'
        example: "088KKvS57Gk4eUw2Kf/fmCJsWoCwZGZavj0LGYk7iCXo/Whu2yxObQ1Bb2gJdnG"

  oauth2Request:
    type: object
    required: ['code', 'provider']
    properties:
      code:
        type: string
        description: 'OAuth2 code'
        example: '…'
      provider:
        type: string
        enum:
          - 'fb'
        description: 'OAuth2 Provider'
        example: '…'

  updateProfile:
    type: object
    required: ['name', 'age', 'gender', 'location']
    properties:
      name:
        type: string
        description: Full name
        example: 'Nikita Kuznetsov'
      age:
        type: number
        minimum: 14
        maximum: 255
        description: How old are you?
        example: '35'
      gender:
        type: string
        description: Your sex
        example: boy
        enum:
          - "girl"
          - "boy"
          - "unknown"
      location:
        type: string
        example: 01
        description: Where are you from?

  responseProfile:
    type: object
    required: ['name', 'age', 'gender', 'location', 'gravatar']
    properties:
      name:
        type: string
        description: Full name
        example: 'Nikita Kuznetsov'
      age:
        type: number
        minimum: 14
        maximum: 255
        description: How old are you?
        example: '35'
      gender:
        type: string
        description: Your sex
        example: boy
        enum:
          - "girl"
          - "boy"
          - "unknown"
      location:
        type: string
        example: 01
        description: Where are you from?
      gravatar:
        type: string
        example: http://www.gravatar.com/avatar/eab2d80a66bc03c0efe41232b39035bd.jpg
        description: URL for Gravatar




